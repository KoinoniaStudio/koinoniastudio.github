{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{productListReducer,productDetailsReducer}from\"./reducers/productReducers\";import{cartReducer}from\"./reducers/cartReducer\";var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer});var cartItemsFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[];var initialState={cart:{cartItems:cartItemsFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/Users/victoriahawley/Downloads/Koinonia-main/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OACEC,kBADF,CAEEC,qBAFF,KAGO,4BAHP,CAIA,OAASC,WAAT,KAA4B,wBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGP,eAAe,CAAC,CAC9BQ,WAAW,CAAEJ,kBADiB,CAE9BK,cAAc,CAAEJ,qBAFc,CAG9BK,IAAI,CAAEJ,WAHwB,CAAD,CAA/B,CAMA,GAAMK,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,CAEzB,EAFJ,CAIA,GAAMG,CAAAA,YAAY,CAAG,CAAEN,IAAI,CAAE,CAAEO,SAAS,CAAEN,oBAAb,CAAR,CAArB,CAEA,GAAMO,CAAAA,UAAU,CAAG,CAAChB,KAAD,CAAnB,CAEA,GAAMiB,CAAAA,KAAK,CAAGpB,WAAW,CACvBQ,OADuB,CAEvBS,YAFuB,CAGvBb,mBAAmB,CAACF,eAAe,MAAf,QAAmBiB,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initialState = { cart: { cartItems: cartItemsFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}